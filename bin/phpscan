#!/usr/bin/env php
<?php
declare(strict_types=1);

use Ferror\Bundle\PHPScan\Trimmer;

require dirname(__DIR__) . '/vendor/autoload.php';

$dirName = dirname(__DIR__) . '/src';

$allFiles = [];
function a(&$allFiles, $dir) {
    $ffs = scandir($dir);

    unset($ffs[array_search('.', $ffs, true)]);
    unset($ffs[array_search('..', $ffs, true)]);
    unset($ffs[array_search('.gitignore', $ffs, true)]);

    // prevent empty ordered elements
    if (count($ffs) < 1) {
        return;
    }

    foreach ($ffs as $ff) {
        if (is_dir($dir . '/' . $ff)) {
            a($allFiles, $dir . '/' . $ff);
        } else {
            $allFiles[] = $dir . '/' . $ff;
        }
    }
}

a($allFiles, $dirName);

$results = [];
$imports = [];
$id = 0;
$trimmer = new Trimmer();
foreach ($allFiles as $file) {
    $open = fopen($file, 'rb');

    if ($open === false) {
        echo 'Cannot open file: ' . $file;
        die;
    }

    while (!feof($open)) {
        $line = fgets($open);

        if (strpos($line, 'namespace') !== false) {
            $results[$id] = new \Ferror\Bundle\PHPScan\ClassImports($trimmer->trimNamespace($line), []);
        }

        if (strpos($line, 'use') !== false) {
            $results[$id]->addImport($trimmer->trimUse($line));
        }

        if (strpos($line, 'class') !== false) {
            break;
        }
    }

    $id++;

    fclose($open);
}

foreach ($results as $r) {
    if (!$r->isValid()) {
        echo "invalid class: " . get_class($r) . "\n";
    }
}

//var_dump($results);
